version: '3.2'

services:
  fscrawler:
    image: dadoonet/fscrawler:latest
    container_name: fscrawler
    restart: always
    volumes:
      - $FSCRAWLER_FOLDER:/usr/share/fscrawler/data/:ro
      - ./config/fscrawler/:/usr/app/config/
      - ./.env/:/usr/app/.env
    depends_on:
      - elasticsearch1
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
    command: |
      /bin/bash -c "envsubst < /usr/app/config/idx/_template.yaml > /usr/app/config/idx/_settings.yaml && fscrawler --trace --config_dir /usr/app/config idx --restart --rest "

    ports:
      - 8080:8080
    networks:
      - elastic    
 

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION

    volumes:
      - data01:/usr/share/elasticsearch/data/
      - configElastic:/usr/share/elasticsearch/config/
      - type: bind
        source: "./config/elasticsearch/elasticsearch.yml"
        target: "/usr/share/elasticsearch/config/elasticsearch.yml"
        read_only: true
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic
    environment:
      ES_JAVA_OPTS: $JAVA_OPTS
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      discovery.type: single-node

  kibana1:
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    container_name: kibana1
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch1:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch1:9200"]'
      ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
    restart: always
    depends_on:
      - elasticsearch1
    volumes:
      - kibanaData01:/usr/share/kibana/data
      - type: bind
        source: "./config/kibana/kibana.yml"
        target: "/usr/share/kibana/config/kibana.yml"
        read_only: true
    networks:
      - elastic

  portainer:
    image: portainer/portainer
    container_name: portainer_elastic
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9500:9000
      - 8500:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  web:
    image: aikain/simplehttpserver:0.1
    restart: always
    ports:
      - "8100:80"
    volumes:
      - "$FSCRAWLER_FOLDER:/var/www"

  zeppelin:
    image: apache/zeppelin:0.9.0
    ports:
      - 8900:8080
    volumes:
      - ./config/zeppelin/notebook:/zeppelin/notebook
      - zeppelin-conf:/zeppelin/conf
    networks:
      - elastic
volumes:
  data01:
    driver: local
  kibanaData01:
    driver: local
  portainer_data:
    driver: local
  configElastic:
    driver: local
  zeppelin-conf:
    driver: local

networks:
  elastic:
    driver: bridge